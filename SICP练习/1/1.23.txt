#lang sicp

(define (smallest-divisor n)
  (find-divisor n 2))

(define (find-divisor n test-divisor)
  (cond ((> (square test-divisor) n) n)
        ((divides? test-divisor n) test-divisor)
        (else (find-divisor n (next-divisor test-divisor)))))


(define (next-divisor n)
  (cond ((even? n) n+1)
        (else n+2)))

(define (even? n)
  (= (remainder n 2) 0))

(define (divides? a b)
  (= (remainder b a) 0))

(define (square x) (* x x))

(smallest-divisor 199)
(smallest-divisor 1999)
(smallest-divisor 19999)