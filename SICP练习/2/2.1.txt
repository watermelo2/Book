#lang sicp

(define (numer x) (car x)) 
  
(define (denom x) (cdr x)) 
  
(define (print-rat x) 
   (newline) 
   (display (numer x)) 
   (display "/") 
   (display (denom x))) 
  
(define (make-rat n d) 
   (let ((g ((if (< d 0) - +) (gcd n d)))) 
     (cons (/ n g) (/ d g))))

(define (gcd a b)
  (if (= b 0)
      a
      (gcd b (remainder a b))))

(define (remainder a b)
  (cond ((< a b) a)
        (else (remainder (- a b) b))))