#lang sicp

;; Point
(define (make-point x y) (cons x y))
(define (x-point p) (car p))
(define (y-point p) (cdr p))
(define (print-point p)
  (newline) 
   (display "(") 
   (display (x-point p)) 
   (display ",") 
   (display (y-point p)) 
   (display ")")) 

;; Segment
(define (make-segment start-point end-point) (cons start-point end-point))
(define (start-segment segment) (car segment))
(define (end-segment segment) (cdr segment))

;; Rectangle

(define (rectangle a b c d)
  (cons a (cons b (cons c (cons d nil)))))
(define (height rectangle)
  (abs (- (y-point (car rectangle)) (y-point (car (cdr (cdr rectangle)))))))
(define (width rectangle)
  (abs (- (x-point (car rectangle)) (x-point (car (cdr rectangle))))))

;; Procedure
(define (area-rect rect) 
   (* (width rect) (height rect))) 

(define (perimeter-rect rect) 
   (* (+ (width-rect rect) (height rect)) 2)) 

