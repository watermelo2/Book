字符编码

概念: `码元`的大小就是计算机一次读取字节的大小,比如给`ASCII字符集`编码的时候`码元`大小为一个字节就够了.
 
ISO 8859系列字符集 
包括15个字符集  每个字符集都扩充了96个字符  在160~255这个范围里编号  仍然像ASCII字符集的编码方式一样,采用了单字节作为码元的大小

GB2312字符集 
并没有收录ASCII字符集中的字符 6763  新概念: '分区'   一共设计了94个区,每个区可以放94个字符(可以理解位九宫格).比如汉字'啊',在16区第一位,所以对应数字位1601    
分区规定介绍: 
01-09: 区为特殊符号,字符包括特殊符号、数字、英文字符、制表符等,包括拉丁字母、希腊字母、日文平假名及片假名字母、俄语西里尔字母等
10-15区没有编码,为了以后新加入字符来扩展
16-55区为一级汉字,也就是常用的汉字,按拼音排序,共3755个
56-87区为二级汉字,也就是非常用汉字,按部首／笔画排序,共3008个
88-94区没有编码,留着给以后扩展
表示(两个字节): (区码+160)+(位码+160)  比如: 王=4585=(45+160) (85+160)=205 245=11001101 11110101=CDF5
总结: 由于GB2312没有收录ASCII中的字符集,所以编码过程总体为: 
如果该字符在ASCII字符集中,就按照ASCII编码的方式进行编码.
如果该字符在GB2312字符集中,就按照GB2312编码的方式进行编码.

GBK: 在GB2312的基础上,对它收录的字符做了一个扩充,共收录 21886 个汉字和图形符号

unicode字符集(包含世界各国大部分的字符): 一共设计了17(编号从0~16)个平面,每个平面可以包含65536(0~65535)个编号,最多可包含1,114,112(100w+)个字符
兼容ASCII字符集的编号和ISO 8859-1字符集的编号,例如: U+0000~U+007F和ASCII字符集中的0~127是一致的; U+0000~U+00FF和ISO 8859-1字符集的0~255是一致的.
编码: 给unicode字符集编码的时候目前码元大小有1个字节、2个字节、4个字节这么三种情况,分别对应的编码方式是UTF-8、UTF-16、UTF-32这三种.
UTF-8逻辑编码方案: 
码元采用一个字节. 用首字节的开头几位来辨别用几个字节编码,规则:
如果首字节以0开头,肯定是单字节编码(单个码元)--有效编码位数是7位
如果首字节以110开头,肯定是双字节编码(2个码元)--有效编码位数是11位
如果首字节以1110开头,肯定是三字节编码(3个码元)--有效编码位数是16位
以此类推...
另外,如果某个字符是由多个字节编码的,那除了首字节外,其余字节都需要用10开头,以区别单字解释编码和多字节编码的首字节.


UTF-16逻辑编码方案: 
码元采用两个字节,意味着一个码元可以存第0平面的所有值(0 ~ 65535). 
前提: 基本多语言平面的55296~57343(十六进制0xD800 ~ 0xDFFF)这个区间的编号为代理区,这个区间的编号并不对应字符.
编码: 
对于不属于代理区编码的字符,使用一个码元(两个字节),表示的是第0平面的字符.
对于第1～16平面,采用两个码元来编码: 
第一个码元的取值范围是0xD800~0xDBFF(二进制为11011000 00000000 ~ 11011011 11111111,十进制为55296 ~ 56319)
第二个码元的取值范围为0xDC00~0xDFFF(二进制为11011100 00000000 ~ 11011111 11111111,十进制为56320 ~ 57343)
去除码元取值范围模板110110xx xxxxxxxx 110111xx xxxxxxxx,特殊化110110pp ppxxxxxx 110111xx xxxxxxxx,四位p代表编码所在平面(1~16),
16位代表位置(0~‭65535‬),刚好表示所有字符

UTF-32逻辑编码方案: 
码元采用4个字节,unicode字符集总共能放1114112个数,一个码元能表示4294967296个数.
